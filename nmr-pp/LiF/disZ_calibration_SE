; 9 April 2024
; Andrew Stasiuk


; WAHUHA8 delays
define delay delay0
"delay0=(2*d20-p1)/2"
define delay delay1
"delay1=d20-p1"
define delay delay2
"delay2=(2*d20-p1)"

"l1=0"

1  ze

2   ; state & pp reset delay
    d1 rpp1 rpp2 rpp3 rpp4 rpp6 rpp7 rpp9 rpp10 rpp11 rpp12
    100u pl2:f2

; Random Zeeman State Preparation
    (p1 ph0):f2

3   ; Repeated WAHUHA8 to encode random state (18 cycles)
    delay0
    (p1 ph1^):f2
    delay1
    (p1 ph2^):f2
    delay2
    (p1 ph3^):f2
    delay1
    (p1 ph4^):f2
    delay0
    lo to 3 times l1

    (p1 ph5):f2
    2.5u

; Hamiltonian Evolution
4

; Random Zeeman Observable Engineering
    (p1 ph14):f2

5   ; Repeated WAHUHA8 to encode random observable (18 cycles)
    delay0
    (p1 ph15^):f2
    delay1
    (p1 ph16^):f2
    delay2
    (p1 ph17^):f2
    delay1
    (p1 ph18^):f2
    delay0
    lo to 5 times l1

    ; shelf in Z, then measure
    (p1 ph19):f2
    1m
    (p1 ph29):f2
    20u
    (p1 ph30):f2

    go=2 ph31
    1m wr #0 if #0

    ; increment WAHUHA time
    5m iu1
    5m iu1
    lo to 2 times td1

  exit

ph0 = (360) 270 90

ph1 = (360) 0 180
ph2 = (360) 90 270
ph3 = (360) 270 90
ph4 = (360) 180 0

ph5 = (360) 0 0 180 180

; evolution would go here

ph14 = (360) 0 0 0 0 180 180 180 180

ph15 = (360) 0 180
ph16 = (360) 90 270
ph17 = (360) 270 90
ph18 = (360) 180 0

ph19 = (360) 270 90

ph29 = 0 2
ph30 = 1 3
ph31 = 0 2 2 0 0 2 2 0
